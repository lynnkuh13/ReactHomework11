{"ast":null,"code":"var _jsxFileName = \"/Users/lynnk/Documents/skillspire/sept2021MERN/webfundamentals/js/React/Homework11/hooks/src/Hooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n/*Do the counter project with hook\nIn project have two inputs\nAdd 5 effects \n\n          -> one runs when your component is mounted \n\n          -> one runs when your input #1 is changed\n\n          -> one runs when your input #2 is changed\n\n          -> one runs when your counter is changed\n\n           -> one runs when your anything is changed\n\n          -> one runs only when either of the input is changed\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hooks() {\n  _s();\n\n  const [counter, setCount] = useState(0);\n  const [firstName, setFirstName] = useState('Dummy value');\n  const [lastName, setLastName] = useState('');\n\n  function setCounter() {\n    console.log(\"COUNTED!\");\n    setCount(counter + 1);\n  }\n  /*\n     useEffect() => {\n          console.log(\"MOUNTED\");\n      }, []) //only once\n  */\n\n\n  function submit(event) {\n    event.preventDefault();\n    console.log(\"First name: \", firstName);\n    console.log(\"Last name: \", lastName);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setCounter,\n      children: \"CLICK ME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: firstName,\n      onChange: e => setFirstName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: lastName,\n      onChange: e => setLastName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Hooks, \"1Qc0HOyyBgvdRdmqNYdRv4K4IkI=\");\n\n_c = Hooks;\nexport default Hooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"sources":["/Users/lynnk/Documents/skillspire/sept2021MERN/webfundamentals/js/React/Homework11/hooks/src/Hooks.js"],"names":["React","useState","useEffect","Hooks","counter","setCount","firstName","setFirstName","lastName","setLastName","setCounter","console","log","submit","event","preventDefault","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,aAAD,CAA1C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASS,UAAT,GAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAP,IAAAA,QAAQ,CAACD,OAAO,GAAC,CAAT,CAAR;AACH;AACL;AACA;AACA;AACA;AACA;;;AAGI,WAASS,MAAT,CAAgBC,KAAhB,EAAuB;AACnBA,IAAAA,KAAK,CAACC,cAAN;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,SAA5B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,QAA3B;AACH;;AACD,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAA,sBAAMN,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEE,SAA1B;AAAqC,MAAA,QAAQ,EAAGU,CAAD,IAAOT,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlE;AAAA;AAAA;AAAA;AAAA,YAHR,eAIQ;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEV,QAA1B;AAAoC,MAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhE;AAAA;AAAA;AAAA;AAAA,YAJR,eAKQ;AAAQ,MAAA,OAAO,EAAEL,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA9BQV,K;;KAAAA,K;AA+BT,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\n/*Do the counter project with hook\nIn project have two inputs\nAdd 5 effects \n\n          -> one runs when your component is mounted \n\n          -> one runs when your input #1 is changed\n\n          -> one runs when your input #2 is changed\n\n          -> one runs when your counter is changed\n\n           -> one runs when your anything is changed\n\n          -> one runs only when either of the input is changed\n*/ \n\nfunction Hooks() {\n    const [counter, setCount] = useState(0);\n    const [firstName, setFirstName] = useState('Dummy value');\n    const [lastName, setLastName] = useState('');\n\n    function setCounter() {\n        console.log(\"COUNTED!\");\n        setCount(counter+1);\n    }\n/*\n   useEffect() => {\n        console.log(\"MOUNTED\");\n    }, []) //only once\n*/\n\n\n    function submit(event) {\n        event.preventDefault();\n        console.log(\"First name: \", firstName);\n        console.log(\"Last name: \", lastName);\n    }\n    return (\n        <div>\n            <button onClick={setCounter}>CLICK ME</button>\n                <h3> {counter} </h3>\n                <input type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n                <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\n                <button onClick={submit}>Submit</button>\n        </div>\n    )\n}\nexport default Hooks;\n"]},"metadata":{},"sourceType":"module"}